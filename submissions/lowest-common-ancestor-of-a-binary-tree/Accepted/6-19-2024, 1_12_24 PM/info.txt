{"id":1293837473,"question_id":236,"lang":"java","lang_name":"Java","time":"1 day, 23 hours","timestamp":1718820744,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1293837473/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"44.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if (root == null || root == p || root == q) {\n            return root;\n        }\n        TreeNode left = lowestCommonAncestor(root.left, p, q);\n        TreeNode right = lowestCommonAncestor(root.right, p, q);\n        if ((left == p && right == q) || (right == p && left == q)) {\n            return root;\n        }\n        if (left != null) {\n            return left;\n        }\n        return right;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}