{"id":1250973515,"question_id":2573,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1715010319,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1250973515/","is_pending":"Not Pending","title":"Remove Nodes From Linked List","memory":"69.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeNodes(ListNode head) {\n        head = reverseList(head);\n\n        ListNode node = head;\n        ListNode prev = null;\n        int max = 0;\n        while (node != null) {\n            int val = node.val;\n            // System.out.println(\"val: \" + val);\n            // System.out.println(\"max: \" + max);\n            boolean wasdeleted = false;\n            if (val < max) { // delete node.\n                if (prev != null) {\n                    // System.out.println(\"deleting...\");\n                    prev.next = node.next;\n                    wasdeleted = true;\n                }\n            } else {\n                max = val;\n            }\n            if (!wasdeleted) {\n                prev = node;\n            }\n            node = node.next;\n        }\n\n        return reverseList(head);\n    }\n\n    private ListNode reverseList(ListNode oldHead) {\n        ListNode newHead = oldHead;\n        ListNode node = oldHead.next;\n        if (node == null) {\n            return oldHead;\n        }\n        while (node != null) {\n            oldHead.next = node.next;\n            node.next = newHead;\n            newHead = node;\n            node = oldHead.next;\n        }\n        return newHead;\n    }\n}\n","compare_result":"11111111111111111111111111111111","title_slug":"remove-nodes-from-linked-list","has_notes":false,"flag_type":1}