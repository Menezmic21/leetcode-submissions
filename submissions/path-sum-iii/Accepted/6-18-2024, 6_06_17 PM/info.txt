{"id":1292926981,"question_id":437,"lang":"java","lang_name":"Java","time":"2 days, 18 hours","timestamp":1718751977,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/1292926981/","is_pending":"Not Pending","title":"Path Sum III","memory":"43.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int pathSum(TreeNode root, int targetSum) {\n        if (root == null) {\n            return 0;\n        }\n        return n_pathSumFrNode(root, 0, targetSum) + pathSum(root.left, targetSum) + pathSum(root.right, targetSum);\n    }\n    private int n_pathSumFrNode(TreeNode root, long sum, int target) {\n        if (root == null) {\n            return 0;\n        }\n        sum += root.val;\n        if (sum == target) {\n            return 1 + n_pathSumFrNode(root.left, sum, target) + n_pathSumFrNode(root.right, sum, target);\n        }\n        return n_pathSumFrNode(root.left, sum, target) + n_pathSumFrNode(root.right, sum, target);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}