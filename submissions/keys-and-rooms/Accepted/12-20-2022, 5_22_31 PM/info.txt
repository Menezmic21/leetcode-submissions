{"id":862931215,"question_id":871,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1671578551,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/862931215/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"41.8 MB","code":"class Solution {\n    public boolean canVisitAllRooms(List<List<Integer>> rooms) {\n        HashMap<Integer, Boolean> visited = new HashMap<Integer, Boolean>();\n        dfs(0, rooms, visited);\n        for(int room = 0; room < rooms.size(); room++){\n            if(!visited.getOrDefault(room, false)) return false;\n        }\n        return true;\n    }\n    public void dfs(int node, List<List<Integer>> rooms, HashMap<Integer, Boolean> visited){\n        List<Integer> neighbors = rooms.get(node);\n        visited.put(node, true);\n        if(neighbors.size() == 0) return;\n        for(int room:neighbors){\n            if(!visited.getOrDefault(room, false)) dfs(room, rooms, visited);\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms","has_notes":false,"flag_type":1}