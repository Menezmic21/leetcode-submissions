{"id":862927478,"question_id":871,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1671577708,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/862927478/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"45.4 MB","code":"class Solution {\n    public boolean canVisitAllRooms(List<List<Integer>> rooms) {\n        List<Integer> queue = new ArrayList<Integer>();\n        HashMap<Integer, Boolean> visited = new HashMap<Integer, Boolean>();\n        for(int room = 0; room < rooms.size(); room++) {\n            visited.put(room, false);\n        }\n        queue.add(0);\n        visited.put(0, true);\n        while(queue.size() > 0) {\n            int node = queue.remove(0);\n            visited.put(node, true);\n            List<Integer> neighbors = rooms.get(node);\n            for(Integer room:neighbors) {\n                if(!visited.get(room)) {\n                    queue.add(room);\n                }\n            }\n        }\n        for(int room = 0; room < rooms.size(); room++) {\n            if(!visited.get(room)) return false;\n        }\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms","has_notes":false,"flag_type":1}