{"id":1252735786,"question_id":506,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1715181105,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1252735786/","is_pending":"Not Pending","title":"Relative Ranks","memory":"45.6 MB","code":"class Solution {\n    public String[] findRelativeRanks(int[] scores) {\n        int nElts = scores.length;\n        HashMap<Integer, Integer> hmap = new HashMap<Integer, Integer>();\n        PriorityQueue<Integer> pq = new PriorityQueue<Integer>(Collections.reverseOrder());\n        for (int i = 0; i < nElts; i++) {\n            hmap.put(scores[i], i);\n            pq.add(scores[i]);\n        }\n        String[] placements = new String[nElts];\n        int rank = 1;\n        while (!pq.isEmpty()) {\n            int score = pq.poll();\n            placements[hmap.get(score)] = convertRank(rank++);\n        }\n        return placements;\n    }\n    private String convertRank(int rank) {\n        if (rank == 1) {\n            return \"Gold Medal\";\n        } else if (rank == 2) {\n            return \"Silver Medal\";\n        } else if (rank == 3) {\n            return \"Bronze Medal\";\n        } else {\n            return \"\" + rank;\n        }\n    }\n}","compare_result":"111111111111111111","title_slug":"relative-ranks","has_notes":false,"flag_type":1}