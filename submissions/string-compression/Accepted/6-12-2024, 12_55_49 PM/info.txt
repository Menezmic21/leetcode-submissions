{"id":1286264114,"question_id":443,"lang":"java","lang_name":"Java","time":"1 week, 1 day","timestamp":1718214949,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1286264114/","is_pending":"Not Pending","title":"String Compression","memory":"44.1 MB","code":"class Solution {\n    public int compress(char[] chars) {\n        char prev = chars[0];\n        int pi = 0;\n        int end = 0;\n        char c = 'a';\n        for (int i = 1; i <= chars.length; i++) {\n            // print_arr(chars);\n            if (i == chars.length || prev != (c = chars[i])) {\n                // number of chars left in group\n                // while (i - pi > 0) {\n                //     chars[end]\n                // }\n                int n = i - pi;\n                chars[end] = prev;\n                prev = c;\n                pi = i;\n                end++;\n                if (n == 1) {\n                    continue;\n                }\n                // String s = \"\" + n;\n                // for (int j = 0; j < s.length(); j++) {\n                //     chars[end] = s.charAt(j);\n                //     end++;\n                // }\n\n                if (n >= 1000) {\n                    chars[end] = (\"\" + (n / 1000)).charAt(0);\n                    end++;\n                }\n                if (n >= 100) {\n                    chars[end] = (\"\" + ((n % 1000) / 100)).charAt(0);\n                    end++;\n                }\n                if (n >= 10) {\n                    chars[end] = (\"\" + ((n % 100) / 10)).charAt(0);\n                    end++;\n                }\n                if (n >= 1) {\n                    chars[end] = (\"\" + (n % 10)).charAt(0);\n                    end++;\n                }\n            }\n        }\n        // System.out.println(end);\n        // print_arr(chars);\n        return end;\n    }\n    // private void print_arr(char[] chars) {\n    //     System.out.print(\"[\");\n    //     for (char c : chars) {\n    //         System.out.print(\"\" + c + \", \");\n    //     }\n    //     System.out.println(\"]\");\n    // }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"string-compression","has_notes":false,"flag_type":1}