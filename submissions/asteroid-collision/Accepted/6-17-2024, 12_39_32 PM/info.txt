{"id":1291551541,"question_id":735,"lang":"java","lang_name":"Java","time":"4Â days","timestamp":1718645972,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1291551541/","is_pending":"Not Pending","title":"Asteroid Collision","memory":"45.1 MB","code":"class Solution {\n    public int[] asteroidCollision(int[] asteroids) {\n        Deque<Integer> stack = new ArrayDeque<>();\n        int prev = -1;\n        for (int aster : asteroids) {\n            if (aster < 0) { // aster heading left\n                if (prev < 0) { // prev heading left\n                    // System.out.println(\"both happy, same dir\");\n                    stack.addFirst(aster);\n                } else  { // prev heading right -> collision\n                    boolean alive = true;\n                    while (prev > 0) {\n                        if (prev > -aster) { // prev wins, aster destroyed\n                            // System.out.println(\"prev wins, aster destroyed\");\n                            alive = false;\n                            break;\n                        } else if (prev == -aster) { // both lose\n                            // System.out.println(\"mutual destruction\");\n                            alive = false;\n                            stack.removeFirst();\n                            // prev = -1;\n                            break;\n                        } else { // aster wins, prev destroyed\n                            // System.out.println(\"aster wins, prev destroyed\");\n                            stack.removeFirst();\n                            if (stack.isEmpty()) {\n                                // prev = -1;\n                                break;\n                            }\n                            prev = stack.peekFirst();\n                        }\n                    }\n                    if (alive) {\n                        stack.addFirst(aster);\n                    }\n                }\n            } else { // aster heading right\n                // System.out.println(\"both happy, op dirs\");\n                stack.addFirst(aster);\n            }\n            prev = stack.isEmpty() ? -1 : stack.peekFirst();\n        }\n        int[] ans = new int[stack.size()];\n        for (int i = ans.length-1; i >= 0; i--) {\n            ans[i] = stack.pollFirst();\n        }\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"asteroid-collision","has_notes":false,"flag_type":1}