{"id":970532117,"question_id":2428,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1686680239,"status":10,"status_display":"Accepted","runtime":"121 ms","url":"/submissions/detail/970532117/","is_pending":"Not Pending","title":"Equal Row and Column Pairs","memory":"52.6 MB","code":"class Solution {\n    public String arrToStr(int[] arr) {\n        String rStr = \"\";\n\n        for(int i : arr) {\n            rStr += String.valueOf(i) + \",\";\n        }\n\n        return rStr;\n    }\n\n    public int equalPairs(int[][] grid) {\n        // 12:42\n        HashMap<String, Integer> colFreq = new HashMap<String, Integer>();\n        HashMap<String, Integer> rowFreq = new HashMap<String, Integer>();\n\n        for(int rowIdx = 0; rowIdx < grid.length; rowIdx++) {\n            String key = arrToStr(grid[rowIdx]);\n            rowFreq.put(key, rowFreq.getOrDefault(key, 0) + 1);\n        }\n        \n        for(int colIdx = 0; colIdx < grid.length; colIdx++) {\n            int[] col = new int[grid.length];\n            for(int rowIdx = 0; rowIdx < grid.length; rowIdx++) {\n                col[rowIdx] = grid[rowIdx][colIdx];\n            }\n            String key = arrToStr(col);\n            colFreq.put(key, colFreq.getOrDefault(key, 0) + 1);\n        }\n\n        // for(String key : colFreq.keySet()) {\n        //     System.out.println(key);\n        // }\n\n        // System.out.println();\n\n        // for(String key : rowFreq.keySet()) {\n        //     System.out.println(key);\n        // }\n\n        int pairs = 0;\n        for(String key : colFreq.keySet()) {\n            pairs += colFreq.get(key) * rowFreq.getOrDefault(key, 0);\n        }\n\n        return pairs;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"equal-row-and-column-pairs","has_notes":false,"flag_type":1}