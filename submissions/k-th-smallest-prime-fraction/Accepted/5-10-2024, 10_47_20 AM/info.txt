{"id":1254520113,"question_id":802,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1715356040,"status":10,"status_display":"Accepted","runtime":"570 ms","url":"/submissions/detail/1254520113/","is_pending":"Not Pending","title":"K-th Smallest Prime Fraction","memory":"165.7 MB","code":"class Solution {\n    public int[] kthSmallestPrimeFraction(int[] arr, int k) {\n        ArrayList<Double[]> fracs = new ArrayList<>();\n        int n = 0;\n        for (int i = 0; i < arr.length; i++) {\n            for (int j = i+1; j < arr.length; j++) {\n                double newFrac = ((double) arr[i]) / arr[j];\n                Double[] newEntry = {newFrac, (double) arr[i], (double) arr[j]};\n                fracs.add(newEntry);\n            }\n        }\n        Collections.sort(fracs, (a, b) -> Double.compare(a[0], b[0]));\n        Double[] resEntry = fracs.get(k-1);\n        int[] res = {(int) ((double) resEntry[1]), (int) ((double) resEntry[2])};\n        return res;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"k-th-smallest-prime-fraction","has_notes":false,"flag_type":1}