{"id":863493333,"question_id":922,"lang":"java","lang_name":"Java","time":"1 year, 6 months","timestamp":1671668000,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/863493333/","is_pending":"Not Pending","title":"Possible Bipartition","memory":"49.8 MB","code":"class Solution {\n    public boolean possibleBipartition(int n, int[][] dislikes) {\n\n        ArrayList<Integer>[] dislikeMap = new ArrayList[n];\n        for(int i = 0; i < n; i++) {\n            dislikeMap[i] = new ArrayList<Integer>();\n        }\n        for(int[] relationship:dislikes) {\n            dislikeMap[relationship[0]-1].add(relationship[1]);\n            dislikeMap[relationship[1]-1].add(relationship[0]);\n        }\n\n        int[] states = new int[n];\n\n        for(int i = 0; i < n; i++) {\n           if(states[i] == 0 && !bfs(n, i+1, dislikeMap, states)) return false;\n        }\n        return true;\n    }\n\n    public boolean bfs(int n, int s, ArrayList<Integer>[] dislikeMap, int[] states) {\n        ArrayList<Integer> queue = new ArrayList<Integer>();\n        queue.add(s);\n        while(queue.size() > 0) {\n            int node = queue.remove(0);\n            // System.out.println(\"{\" + node[0] + \" \" + node[1] + \"}\");\n            int color = 1;\n            if(states[node-1] == 1) color = 2;\n            ArrayList<Integer> elements = new ArrayList<Integer>();\n            elements = dislikeMap[node-1];\n            for(Integer element:elements) {\n                if(states[element-1] == 0) {\n                    states[element-1] = color;\n                    queue.add(element);\n                } else if(states[element-1] != color) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //0 = unvisited; 1 = color 1; 2 = color 2    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"possible-bipartition","has_notes":false,"flag_type":1}