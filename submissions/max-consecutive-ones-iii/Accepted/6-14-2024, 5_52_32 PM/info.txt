{"id":1288553758,"question_id":1046,"lang":"java","lang_name":"Java","time":"6 days, 19 hours","timestamp":1718405552,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1288553758/","is_pending":"Not Pending","title":"Max Consecutive Ones III","memory":"47 MB","code":"class Solution {\n    public int longestOnes(int[] nums, int k) {\n        k++;\n        int right = 0;\n        for ( ; k > 0 && right < nums.length; right++) {\n            if (nums[right] == 0) {\n                k--;\n            }\n        }\n        int max = right;\n        // System.out.println(max);\n        for (int left = 0; right < nums.length; left++, right++) {\n            while (right < nums.length && nums[right] != 0) {\n                right++;\n            }\n            while (left < nums.length && nums[left] != 0) {\n                left++;\n            }\n            max = Math.max(max, right - left);\n            // System.out.println(\"\" + left + \", \" + right + \": \" + (right - left));\n        }\n        return k == 0 ? max - 1 : max;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"max-consecutive-ones-iii","has_notes":false,"flag_type":1}