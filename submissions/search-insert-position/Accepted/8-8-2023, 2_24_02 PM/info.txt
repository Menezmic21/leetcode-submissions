{"id":1015981237,"question_id":35,"lang":"java","lang_name":"Java","time":"10 months, 2 weeks","timestamp":1691522642,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1015981237/","is_pending":"Not Pending","title":"Search Insert Position","memory":"43.5 MB","code":"class Solution {\n    public int searchInsert(int[] nums, int target) {\n        int low = 0, high = nums.length-1;\n        for(; low <= high;) {\n            int mid = high - ((high - low) / 2);\n            if(nums[mid] < target) {\n                low = mid + 1;\n            } else if (nums[mid] > target) {\n                high = mid - 1;\n            } else {\n                return mid;\n            }\n        }\n        // System.out.println(\"low: \" + low);\n        // System.out.println(\"high: \" + high);\n        return low;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-insert-position","has_notes":false,"flag_type":1}