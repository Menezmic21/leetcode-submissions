{"id":1010367842,"question_id":46,"lang":"java","lang_name":"Java","time":"10 months, 3 weeks","timestamp":1690989141,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1010367842/","is_pending":"Not Pending","title":"Permutations","memory":"44.1 MB","code":"class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        List<List<Integer>> perms = new ArrayList<List<Integer>>();\n        buildPerms(perms, new ArrayList<Integer>(Arrays.stream(nums).boxed().toList()), new ArrayList<Integer>());\n        return perms;\n    }\n    public void buildPerms(List<List<Integer>> perms, ArrayList<Integer> nums, ArrayList<Integer> perm) {\n        if(nums.size() == 0) {\n            perms.add(new ArrayList<Integer>(perm));\n            return;\n        }\n        ArrayList<Integer> newNums = new ArrayList<Integer>(nums);\n        for(Integer num : nums) {\n            newNums.remove(num);\n            perm.add(num);\n            buildPerms(perms, newNums, perm);\n            perm.remove(perm.size()-1);\n            newNums.add(num);\n        }\n    }\n}","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}