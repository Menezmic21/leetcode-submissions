{"id":867119520,"question_id":2094,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672255211,"status":10,"status_display":"Accepted","runtime":"740 ms","url":"/submissions/detail/867119520/","is_pending":"Not Pending","title":"Remove Stones to Minimize the Total","memory":"57 MB","code":"class Solution {\n    public int minStoneSum(int[] piles, int k) {\n        PriorityQueue<Integer> pq = new PriorityQueue<Integer>(piles.length, Collections.reverseOrder());\n        for(int pile:piles) pq.add(pile);\n        while(k > 0 && pq.peek() > 1) {\n            int head = pq.poll();\n            // System.out.print(head - head / 2 + \" \");\n            pq.add(head - head / 2);\n            k--;\n        }\n\n        int sum = 0;\n        for(int i = 0; i < piles.length; i++) sum += pq.poll();\n        return sum;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"remove-stones-to-minimize-the-total","has_notes":false,"flag_type":1}