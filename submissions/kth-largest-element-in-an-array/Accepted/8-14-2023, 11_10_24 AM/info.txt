{"id":1021257341,"question_id":215,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1692029424,"status":10,"status_display":"Accepted","runtime":"535 ms","url":"/submissions/detail/1021257341/","is_pending":"Not Pending","title":"Kth Largest Element in an Array","memory":"54 MB","code":"class Solution {\n    public int findKthLargest(int[] nums, int k) {\n        // O(n*logk) vs O(nlogn) vs O(n*logk)\n        ArrayList<Integer> topK = new ArrayList<Integer>();\n        for(int i = 0; i < k; i++) {\n            boolean isAdded = false;\n            int low = 0, high = topK.size()-1;\n            for(; low <= high;) {\n                int mid = high - ((high - low) / 2);\n                if(topK.get(mid) < nums[i]) {\n                    low = mid + 1;\n                } else if(topK.get(mid) > nums[i]) {\n                    high = mid - 1;\n                } else {\n                    isAdded = true;\n                    topK.add(mid, nums[i]);\n                    break;\n                }\n            }\n            if(!isAdded) topK.add(low, nums[i]);\n        }\n        // print(topK);\n        for(int i = k; i < nums.length; i++) {\n            update(topK, nums[i], k);\n            // print(topK);\n        }\n        return topK.get(0);\n    }\n    public void update(ArrayList<Integer> topK, int num, int k) {\n        if(topK.get(k-1) <= num) {\n            topK.add(num);\n            topK.remove(0);\n            return;\n        }\n        if(topK.get(0) >= num) return;\n        int low = 0, high = k-1;\n        for(; low <= high;) {\n            int mid = high - ((high - low) / 2);\n            if(topK.get(mid) < num) {\n                low = mid + 1;\n            } else if (topK.get(mid) > num) {\n                high = mid - 1;\n            } else {\n                topK.add(mid, num);\n                topK.remove(0);\n                return;\n            }\n        }\n        topK.add(low, num);\n        topK.remove(0);\n    }\n    // public void print(ArrayList<Integer> list) {\n    //     System.out.print(\"[\");\n    //     for(int i = 0; i < list.size(); i++) {\n    //         System.out.print(\"\" + list.get(i) + \", \");\n    //     }\n    //     System.out.println(\"]\");\n    // }\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"kth-largest-element-in-an-array","has_notes":false,"flag_type":1}