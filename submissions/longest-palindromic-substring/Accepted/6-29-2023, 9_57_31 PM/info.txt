{"id":982755602,"question_id":5,"lang":"java","lang_name":"Java","time":"11 months, 3 weeks","timestamp":1688093851,"status":10,"status_display":"Accepted","runtime":"310 ms","url":"/submissions/detail/982755602/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"55.1 MB","code":"class Solution {\n    public String longestPalindrome(String s) {\n        int[][] dp = new int[s.length()][s.length()];\n        String longestPalindrome = \"\";\n        for(int i = 0; i < s.length(); i++) {\n            for(int j = 0; j < s.length() - i; j++) {\n                if(i == 0) dp[j][j] = 1; \n                else if(s.charAt(j) == s.charAt(i+j)) {\n                    dp[j][i+j] = dp[j+1][i+j-1] + ((i == 1 || dp[j+1][i+j-1] != 0) ? 2 : 0);\n                    // System.out.println(\"i: \" + j + \"; j: \" + (i+j) + \"; l: \" + dp[j][i+j] + \"; str: \" + s.substring(j, i+j+1));\n                }\n                if(dp[j][i+j] > longestPalindrome.length()) {\n                    longestPalindrome = s.substring(j, i+j+1);\n                    // System.out.println(\"i: \" + i + \"; j: \" + j + \"; str: \" + longestPalindrome);\n                }\n            }\n        }\n        return longestPalindrome;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}