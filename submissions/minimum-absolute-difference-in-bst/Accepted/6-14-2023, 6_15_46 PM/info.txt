{"id":971466904,"question_id":530,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1686784546,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/971466904/","is_pending":"Not Pending","title":"Minimum Absolute Difference in BST","memory":"43.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    public PriorityQueue<Integer> pq = new PriorityQueue<Integer>();\n\n    public int getMinimumDifference(TreeNode root) {\n\n        traverseTree(root);\n\n        int min = Integer.MAX_VALUE;\n        int prev = pq.poll();\n\n        while(!pq.isEmpty()) {\n            int curr = pq.poll();\n            int diff = curr - prev;\n            if(diff < min) min = diff;\n            prev = curr;\n        }\n\n        return min;\n    }\n\n    public void traverseTree(TreeNode root) {\n        pq.add(root.val);\n        if(root.left != null) traverseTree(root.left);\n        if(root.right != null) traverseTree(root.right);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-absolute-difference-in-bst","has_notes":false,"flag_type":1}