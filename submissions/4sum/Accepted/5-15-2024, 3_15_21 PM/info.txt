{"id":1259045029,"question_id":18,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1715804121,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/1259045029/","is_pending":"Not Pending","title":"4Sum","memory":"43.7 MB","code":"class Solution {\n    public List<List<Integer>> fourSum(int[] nums, int target) {\n        Arrays.sort(nums);\n        int n = nums.length;\n        List<List<Integer>> quadLst = new ArrayList<List<Integer>>();\n        for (int i = 0; i < n-3; ) {\n            int A = nums[i];\n            for (int j = i+1; j < n-2; ) {\n                int B = nums[j];\n                for (int left = j+1, right = n-1; left < right; ) {\n                    int C = nums[left];\n                    int D = nums[right];\n                    long sum = (long) A + (long) B + (long) C + (long) D;\n                    if (sum < target) { // sum is too small\n                        left = incrUntilDiff(nums, C, left, 1);\n                        if (left == -1) break;\n                    } else if (sum > target) {\n                        right = incrUntilDiff(nums, D, right, -1);\n                        if (right == -1) break;\n                    } else {\n                        quadLst.add(makeQuad(A, B, C, D));\n                        left = incrUntilDiff(nums, C, left, 1);\n                        if (left == -1) break;\n                    }\n                }\n                j = incrUntilDiff(nums, B, j, 1);\n                if (j == -1) break;\n            }\n            i = incrUntilDiff(nums, A, i, 1);\n            if (i == -1) break;\n        } \n        return quadLst;\n    }\n    private List<Integer> makeQuad(int a, int b, int c, int d) {\n        List<Integer> quad = new ArrayList<Integer>(4);\n        quad.add(a);\n        quad.add(b);\n        quad.add(c);\n        quad.add(d);\n        return quad;\n    }\n    private int incrUntilDiff(int[] nums, int val, int idx, int step) {\n        while (nums[idx] == val) {\n            idx += step;\n            if (idx < 0 || idx >= nums.length) {\n                return -1;\n            }\n        }\n        return idx;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"4sum","has_notes":false,"flag_type":1}