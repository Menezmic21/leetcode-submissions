{"id":1293946541,"question_id":199,"lang":"java","lang_name":"Java","time":"1 day, 21 hours","timestamp":1718828331,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1293946541/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"42.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> rightSideView(TreeNode root) {\n        List<Integer> answer = new ArrayList<>();\n        if (root == null) {\n            return answer;\n        }\n\n        Deque<Integer> depth = new ArrayDeque<>();\n        Deque<TreeNode> queue = new ArrayDeque<>();\n        TreeNode node = root;\n        depth.addLast(0);\n        queue.addLast(node);\n        int prev = -1;\n        int level = -1;\n        while (!queue.isEmpty()) {\n            prev = level;\n            level = depth.pollFirst();\n            node = queue.pollFirst();\n            if (prev != level) {\n                answer.add(node.val);\n            }\n            if (node.right != null) {\n                depth.addLast(level+1);\n                queue.addLast(node.right);\n            }\n            if (node.left != null) {\n                depth.addLast(level+1);\n                queue.addLast(node.left);\n            }\n        }\n        return answer;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}