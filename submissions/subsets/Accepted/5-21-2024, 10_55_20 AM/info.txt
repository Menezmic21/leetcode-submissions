{"id":1264124389,"question_id":78,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1716306920,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1264124389/","is_pending":"Not Pending","title":"Subsets","memory":"42.4 MB","code":"class Solution {\n    public List<List<Integer>> subsets(int[] nums) {\n        ArrayList<List<Integer>> powerset = new ArrayList<List<Integer>>((int) Math.pow(2, nums.length));\n        backtrace(powerset, new ArrayList<Integer>(nums.length), nums, 0);\n        return powerset;\n    }\n    private void backtrace(List<List<Integer>> powerset, List<Integer> comb, int[] nums, int idx) {\n        if (idx == nums.length) {\n            powerset.add(new ArrayList<Integer>(comb));\n            return;\n        }\n        backtrace(powerset, comb, nums, idx+1);\n        comb.add(nums[idx]);\n        backtrace(powerset, comb, nums, idx+1);\n        comb.remove(Integer.valueOf(nums[idx]));\n    }\n}","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}