{"id":865911281,"question_id":160,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672078166,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/865911281/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"47.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n        ListNode A = headA;\n        ListNode B = headB;\n        int m = 0;\n        int n = 0;\n        while(A != null || B != null) {\n            if(A != null) {\n                A = A.next;\n                m++;\n            }\n            if(B != null) {\n                B = B.next;\n                n++;\n            }\n        }\n        System.out.println(m + \" \" + n);\n        A = headA;\n        B = headB;\n        for(int i = m; i < n; i++) B = B.next;\n        for(int i = n; i < m; i++) A = A.next;\n        for(int i = 0; i < Math.min(m, n); i++) {\n            System.out.println(A.val + \" \" + B.val);\n            if(A == B) return A;\n            A = A.next;\n            B = B.next;\n        }\n        return null;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false,"flag_type":1}