{"id":1254801170,"question_id":21,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1715389603,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1254801170/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"42.7 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {\n        if (list1 == null) {\n            return list2;\n        }\n        if (list2 == null) {\n            return list1;\n        } \n        ListNode head = null;\n        if (list1.val <= list2.val) { // list1 head\n            head = list1;\n            list1 = list1.next;\n        } else {\n            head = list2;\n            list2 = list2.next;\n        }\n        ListNode node = head;\n        while (list1 != null && list2 != null) {\n            if (list1.val <= list2.val) { // favor list 1 as it's not bigger\n                node.next = list1;\n                list1 = list1.next;\n            } else {\n                node.next = list2;\n                list2 = list2.next;\n            }\n            node = node.next;\n        }\n        if (list1 != null) {\n            node.next = list1;\n        } else {\n            node.next = list2;\n        }\n        return head;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}