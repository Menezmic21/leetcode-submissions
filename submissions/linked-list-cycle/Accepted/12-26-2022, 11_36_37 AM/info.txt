{"id":865894453,"question_id":141,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1672076197,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/865894453/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"43.8 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        ListNode slow = head;\n        ListNode fast = head;\n        boolean running = true;\n        boolean hasCycle = false;\n        while(running) {\n            if(fast != null && fast.next != null) {\n                slow = slow.next;\n                fast = fast.next.next;\n            } else {\n                running = false;\n                break;\n            }\n            if(slow == fast) {\n                running = false;\n                hasCycle = true;\n            }\n        }\n        return hasCycle;\n    }\n}","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}