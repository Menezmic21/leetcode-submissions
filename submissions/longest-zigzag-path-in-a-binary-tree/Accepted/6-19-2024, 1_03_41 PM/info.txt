{"id":1293828098,"question_id":1474,"lang":"java","lang_name":"Java","time":"1 day, 23 hours","timestamp":1718820221,"status":10,"status_display":"Accepted","runtime":"2277 ms","url":"/submissions/detail/1293828098/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"60 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int longestZigZag(TreeNode root) {\n        // System.out.println(LZZB(root));\n        return dfs(root)-1;\n    }\n    private int dfs(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        int max = LZZB(root);\n        max = Math.max(max, dfs(root.left));\n        max = Math.max(max, dfs(root.right));\n        return max;\n    }\n    private int LZZB(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        return Math.max(LZZR(root), LZZL(root));\n    } \n    private int LZZR(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        return 1 + LZZL(root.right);\n    } \n    private int LZZL(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        return 1 + LZZR(root.left);\n    } \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false,"flag_type":1}