{"id":1254817385,"question_id":22,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1715393079,"status":10,"status_display":"Accepted","runtime":"311 ms","url":"/submissions/detail/1254817385/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"49.9 MB","code":"class Solution {\n    public List<String> generateParenthesis(int n) {\n        List<ArrayList<String>> workspace = new ArrayList<ArrayList<String>>();\n        ArrayList<String> zrthLst = new ArrayList<>(1);\n        zrthLst.add(\"\");\n        workspace.add(zrthLst);\n        for (int i = 1; i <= n; i++) {\n            workspace.add(new ArrayList<String>((int) Math.pow(2, 2 * i)));\n        }\n        buildStrings(workspace, 1, n);\n        List<String> res = workspace.get(n);\n        for (int i = 0; i < res.size(); i++) {\n            if (!isValid(res.get(i))) {\n                // System.out.println(\"not valid\");\n                res.remove(i);\n                i--;\n            } \n            // else {\n                // System.out.println(\"valid\");\n            // }\n        }\n        return res;\n    }\n    private void buildStrings(List<ArrayList<String>> workspace, int i, int m) {\n        if (i == m+1) {\n            return;\n        }\n        for (String s : workspace.get(i-1)) {\n            workspace.get(i).add(s + \"((\");\n            workspace.get(i).add(s + \"()\");\n            workspace.get(i).add(s + \")(\");\n            workspace.get(i).add(s + \"))\");\n        }\n        // System.out.println(workspace.get(i));\n        buildStrings(workspace, i+1, m);\n    }\n    private boolean isValid(String s) {\n        System.out.println(s);\n        int depth = 0;\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (c == '(') {\n                depth++;\n            } else {\n                depth--;\n            }\n            if (depth < 0) {\n                return false;\n            }\n        }\n        return depth == 0;\n    }\n}","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}