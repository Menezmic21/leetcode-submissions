{"id":874753846,"question_id":144,"lang":"java","lang_name":"Java","time":"1 year, 5 months","timestamp":1673272229,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/874753846/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"40.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> preorderTraversal(TreeNode root) {\n        List<Integer> rLst = new ArrayList<Integer>();\n        if(root == null) return rLst;\n        rLst.add(root.val);\n        if(root.left != null) {\n            // System.out.println(\"left\");\n            rLst.addAll(preorderTraversal(root.left));\n        }\n        if(root.right != null) {\n            // System.out.println(\"right\");\n            rLst.addAll(preorderTraversal(root.right));\n        }\n        return rLst;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}