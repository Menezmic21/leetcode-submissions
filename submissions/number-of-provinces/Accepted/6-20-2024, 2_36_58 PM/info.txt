{"id":1294959015,"question_id":547,"lang":"java","lang_name":"Java","time":"22 hours, 17 minutes","timestamp":1718912218,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1294959015/","is_pending":"Not Pending","title":"Number of Provinces","memory":"47.7 MB","code":"class Solution {\n    public int findCircleNum(int[][] isConnected) {\n        int n = isConnected.length;\n        boolean[] visited = new boolean[n];\n        int cc = 0;\n        for (int i = 0; i < n; i++) {\n            if (!visited[i]) {\n                cc++;\n                dfs(isConnected, i, visited);\n            }\n        }\n        return cc;\n    }\n    private void dfs(int[][] isConnected, int i, boolean[] visited) {\n        if (visited[i]) {\n            return;\n        }\n        visited[i] = true;\n        for (int j = 0; j < isConnected.length; j++) {\n            if (i == j) {\n                continue;\n            }\n            if (isConnected[i][j] == 1) {\n                dfs(isConnected, j, visited);\n            }\n        }\n    }\n\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}