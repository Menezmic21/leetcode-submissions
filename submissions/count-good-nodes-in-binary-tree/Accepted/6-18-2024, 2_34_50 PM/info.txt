{"id":1292810722,"question_id":1544,"lang":"java","lang_name":"Java","time":"2 days, 22 hours","timestamp":1718739290,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1292810722/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"51.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int goodNodes(TreeNode root) {\n        return dfs(Integer.MIN_VALUE, root);\n    }\n    private int dfs(int max, TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        int n_good = 0;\n        max = Math.max(max, root.val);\n        n_good += dfs(max, root.left);\n        n_good += dfs(max, root.right);\n        return root.val == max ? 1 + n_good : n_good;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false,"flag_type":1}